// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#include "model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace caffe2 {
class InputInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputInfo>
      _instance;
} _InputInfo_default_instance_;
class OutputInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OutputInfo>
      _instance;
} _OutputInfo_default_instance_;
class ModelMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelMeta>
      _instance;
} _ModelMeta_default_instance_;
class ModelDefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelDef>
      _instance;
} _ModelDef_default_instance_;
}  // namespace caffe2
namespace protobuf_model_2eproto {
void InitDefaultsInputInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::caffe2::_InputInfo_default_instance_;
    new (ptr) ::caffe2::InputInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::caffe2::InputInfo::InitAsDefaultInstance();
}

void InitDefaultsInputInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInputInfoImpl);
}

void InitDefaultsOutputInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::caffe2::_OutputInfo_default_instance_;
    new (ptr) ::caffe2::OutputInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::caffe2::OutputInfo::InitAsDefaultInstance();
}

void InitDefaultsOutputInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOutputInfoImpl);
}

void InitDefaultsModelMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_model_2eproto::InitDefaultsInputInfo();
  protobuf_model_2eproto::InitDefaultsOutputInfo();
  {
    void* ptr = &::caffe2::_ModelMeta_default_instance_;
    new (ptr) ::caffe2::ModelMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::caffe2::ModelMeta::InitAsDefaultInstance();
}

void InitDefaultsModelMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModelMetaImpl);
}

void InitDefaultsModelDefImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_model_2eproto::InitDefaultsModelMeta();
  protobuf_external_2eproto::InitDefaultsNetDef();
  {
    void* ptr = &::caffe2::_ModelDef_default_instance_;
    new (ptr) ::caffe2::ModelDef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::caffe2::ModelDef::InitAsDefaultInstance();
}

void InitDefaultsModelDef() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModelDefImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::InputInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::InputInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::InputInfo, dims_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::OutputInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::OutputInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::OutputInfo, labels_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::ModelMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::ModelMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::ModelMeta, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::ModelMeta, output_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::ModelDef, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::ModelDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::ModelDef, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::ModelDef, init_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::caffe2::ModelDef, predict_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::caffe2::InputInfo)},
  { 7, 13, sizeof(::caffe2::OutputInfo)},
  { 14, 21, sizeof(::caffe2::ModelMeta)},
  { 23, 31, sizeof(::caffe2::ModelDef)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::caffe2::_InputInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::caffe2::_OutputInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::caffe2::_ModelMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::caffe2::_ModelDef_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "model.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013model.proto\022\006caffe2\032\016external.proto\"\031\n"
      "\tInputInfo\022\014\n\004dims\030\001 \003(\r\"\034\n\nOutputInfo\022\016"
      "\n\006labels\030\001 \003(\t\"Q\n\tModelMeta\022 \n\005input\030\001 \001"
      "(\0132\021.caffe2.InputInfo\022\"\n\006output\030\002 \001(\0132\022."
      "caffe2.OutputInfo\"j\n\010ModelDef\022\037\n\004meta\030\001 "
      "\001(\0132\021.caffe2.ModelMeta\022\034\n\004init\030\002 \001(\0132\016.c"
      "affe2.NetDef\022\037\n\007predict\030\003 \001(\0132\016.caffe2.N"
      "etDef"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 285);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "model.proto", &protobuf_RegisterTypes);
  ::protobuf_external_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_model_2eproto
namespace caffe2 {

// ===================================================================

void InputInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputInfo::kDimsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputInfo::InputInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_2eproto::InitDefaultsInputInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:caffe2.InputInfo)
}
InputInfo::InputInfo(const InputInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dims_(from.dims_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:caffe2.InputInfo)
}

void InputInfo::SharedCtor() {
  _cached_size_ = 0;
}

InputInfo::~InputInfo() {
  // @@protoc_insertion_point(destructor:caffe2.InputInfo)
  SharedDtor();
}

void InputInfo::SharedDtor() {
}

void InputInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputInfo::descriptor() {
  ::protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputInfo& InputInfo::default_instance() {
  ::protobuf_model_2eproto::InitDefaultsInputInfo();
  return *internal_default_instance();
}

InputInfo* InputInfo::New(::google::protobuf::Arena* arena) const {
  InputInfo* n = new InputInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:caffe2.InputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dims_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:caffe2.InputInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 dims = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_dims())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:caffe2.InputInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:caffe2.InputInfo)
  return false;
#undef DO_
}

void InputInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:caffe2.InputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 dims = 1;
  for (int i = 0, n = this->dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->dims(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:caffe2.InputInfo)
}

::google::protobuf::uint8* InputInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:caffe2.InputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 dims = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->dims_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:caffe2.InputInfo)
  return target;
}

size_t InputInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:caffe2.InputInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 dims = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->dims_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dims_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:caffe2.InputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const InputInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:caffe2.InputInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:caffe2.InputInfo)
    MergeFrom(*source);
  }
}

void InputInfo::MergeFrom(const InputInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:caffe2.InputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dims_.MergeFrom(from.dims_);
}

void InputInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:caffe2.InputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputInfo::CopyFrom(const InputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:caffe2.InputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputInfo::IsInitialized() const {
  return true;
}

void InputInfo::Swap(InputInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputInfo::InternalSwap(InputInfo* other) {
  using std::swap;
  dims_.InternalSwap(&other->dims_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputInfo::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OutputInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OutputInfo::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OutputInfo::OutputInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_2eproto::InitDefaultsOutputInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:caffe2.OutputInfo)
}
OutputInfo::OutputInfo(const OutputInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      labels_(from.labels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:caffe2.OutputInfo)
}

void OutputInfo::SharedCtor() {
  _cached_size_ = 0;
}

OutputInfo::~OutputInfo() {
  // @@protoc_insertion_point(destructor:caffe2.OutputInfo)
  SharedDtor();
}

void OutputInfo::SharedDtor() {
}

void OutputInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OutputInfo::descriptor() {
  ::protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OutputInfo& OutputInfo::default_instance() {
  ::protobuf_model_2eproto::InitDefaultsOutputInfo();
  return *internal_default_instance();
}

OutputInfo* OutputInfo::New(::google::protobuf::Arena* arena) const {
  OutputInfo* n = new OutputInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OutputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:caffe2.OutputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OutputInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:caffe2.OutputInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string labels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_labels()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->labels(this->labels_size() - 1).data(),
            static_cast<int>(this->labels(this->labels_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "caffe2.OutputInfo.labels");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:caffe2.OutputInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:caffe2.OutputInfo)
  return false;
#undef DO_
}

void OutputInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:caffe2.OutputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string labels = 1;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "caffe2.OutputInfo.labels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->labels(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:caffe2.OutputInfo)
}

::google::protobuf::uint8* OutputInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:caffe2.OutputInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string labels = 1;
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->labels(i).data(), static_cast<int>(this->labels(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "caffe2.OutputInfo.labels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->labels(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:caffe2.OutputInfo)
  return target;
}

size_t OutputInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:caffe2.OutputInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string labels = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  for (int i = 0, n = this->labels_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->labels(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OutputInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:caffe2.OutputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OutputInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:caffe2.OutputInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:caffe2.OutputInfo)
    MergeFrom(*source);
  }
}

void OutputInfo::MergeFrom(const OutputInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:caffe2.OutputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
}

void OutputInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:caffe2.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputInfo::CopyFrom(const OutputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:caffe2.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputInfo::IsInitialized() const {
  return true;
}

void OutputInfo::Swap(OutputInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OutputInfo::InternalSwap(OutputInfo* other) {
  using std::swap;
  labels_.InternalSwap(&other->labels_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OutputInfo::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelMeta::InitAsDefaultInstance() {
  ::caffe2::_ModelMeta_default_instance_._instance.get_mutable()->input_ = const_cast< ::caffe2::InputInfo*>(
      ::caffe2::InputInfo::internal_default_instance());
  ::caffe2::_ModelMeta_default_instance_._instance.get_mutable()->output_ = const_cast< ::caffe2::OutputInfo*>(
      ::caffe2::OutputInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelMeta::kInputFieldNumber;
const int ModelMeta::kOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelMeta::ModelMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_2eproto::InitDefaultsModelMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:caffe2.ModelMeta)
}
ModelMeta::ModelMeta(const ModelMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input()) {
    input_ = new ::caffe2::InputInfo(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_output()) {
    output_ = new ::caffe2::OutputInfo(*from.output_);
  } else {
    output_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:caffe2.ModelMeta)
}

void ModelMeta::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_) -
      reinterpret_cast<char*>(&input_)) + sizeof(output_));
}

ModelMeta::~ModelMeta() {
  // @@protoc_insertion_point(destructor:caffe2.ModelMeta)
  SharedDtor();
}

void ModelMeta::SharedDtor() {
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete output_;
}

void ModelMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelMeta::descriptor() {
  ::protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelMeta& ModelMeta::default_instance() {
  ::protobuf_model_2eproto::InitDefaultsModelMeta();
  return *internal_default_instance();
}

ModelMeta* ModelMeta::New(::google::protobuf::Arena* arena) const {
  ModelMeta* n = new ModelMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:caffe2.ModelMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(input_ != NULL);
      input_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(output_ != NULL);
      output_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:caffe2.ModelMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .caffe2.InputInfo input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .caffe2.OutputInfo output = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:caffe2.ModelMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:caffe2.ModelMeta)
  return false;
#undef DO_
}

void ModelMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:caffe2.ModelMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .caffe2.InputInfo input = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->input_, output);
  }

  // optional .caffe2.OutputInfo output = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->output_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:caffe2.ModelMeta)
}

::google::protobuf::uint8* ModelMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:caffe2.ModelMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .caffe2.InputInfo input = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->input_, deterministic, target);
  }

  // optional .caffe2.OutputInfo output = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->output_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:caffe2.ModelMeta)
  return target;
}

size_t ModelMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:caffe2.ModelMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .caffe2.InputInfo input = 1;
    if (has_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->input_);
    }

    // optional .caffe2.OutputInfo output = 2;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->output_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:caffe2.ModelMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:caffe2.ModelMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:caffe2.ModelMeta)
    MergeFrom(*source);
  }
}

void ModelMeta::MergeFrom(const ModelMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:caffe2.ModelMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_input()->::caffe2::InputInfo::MergeFrom(from.input());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_output()->::caffe2::OutputInfo::MergeFrom(from.output());
    }
  }
}

void ModelMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:caffe2.ModelMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelMeta::CopyFrom(const ModelMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:caffe2.ModelMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMeta::IsInitialized() const {
  return true;
}

void ModelMeta::Swap(ModelMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelMeta::InternalSwap(ModelMeta* other) {
  using std::swap;
  swap(input_, other->input_);
  swap(output_, other->output_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelMeta::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelDef::InitAsDefaultInstance() {
  ::caffe2::_ModelDef_default_instance_._instance.get_mutable()->meta_ = const_cast< ::caffe2::ModelMeta*>(
      ::caffe2::ModelMeta::internal_default_instance());
  ::caffe2::_ModelDef_default_instance_._instance.get_mutable()->init_ = const_cast< ::caffe2::NetDef*>(
      ::caffe2::NetDef::internal_default_instance());
  ::caffe2::_ModelDef_default_instance_._instance.get_mutable()->predict_ = const_cast< ::caffe2::NetDef*>(
      ::caffe2::NetDef::internal_default_instance());
}
void ModelDef::clear_init() {
  if (init_ != NULL) init_->Clear();
  clear_has_init();
}
void ModelDef::clear_predict() {
  if (predict_ != NULL) predict_->Clear();
  clear_has_predict();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelDef::kMetaFieldNumber;
const int ModelDef::kInitFieldNumber;
const int ModelDef::kPredictFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelDef::ModelDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_2eproto::InitDefaultsModelDef();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:caffe2.ModelDef)
}
ModelDef::ModelDef(const ModelDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::caffe2::ModelMeta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_init()) {
    init_ = new ::caffe2::NetDef(*from.init_);
  } else {
    init_ = NULL;
  }
  if (from.has_predict()) {
    predict_ = new ::caffe2::NetDef(*from.predict_);
  } else {
    predict_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:caffe2.ModelDef)
}

void ModelDef::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&predict_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(predict_));
}

ModelDef::~ModelDef() {
  // @@protoc_insertion_point(destructor:caffe2.ModelDef)
  SharedDtor();
}

void ModelDef::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete init_;
  if (this != internal_default_instance()) delete predict_;
}

void ModelDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelDef::descriptor() {
  ::protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelDef& ModelDef::default_instance() {
  ::protobuf_model_2eproto::InitDefaultsModelDef();
  return *internal_default_instance();
}

ModelDef* ModelDef::New(::google::protobuf::Arena* arena) const {
  ModelDef* n = new ModelDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelDef::Clear() {
// @@protoc_insertion_point(message_clear_start:caffe2.ModelDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(meta_ != NULL);
      meta_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(init_ != NULL);
      init_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(predict_ != NULL);
      predict_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:caffe2.ModelDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .caffe2.ModelMeta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .caffe2.NetDef init = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .caffe2.NetDef predict = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_predict()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:caffe2.ModelDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:caffe2.ModelDef)
  return false;
#undef DO_
}

void ModelDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:caffe2.ModelDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .caffe2.ModelMeta meta = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  // optional .caffe2.NetDef init = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->init_, output);
  }

  // optional .caffe2.NetDef predict = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->predict_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:caffe2.ModelDef)
}

::google::protobuf::uint8* ModelDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:caffe2.ModelDef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .caffe2.ModelMeta meta = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  // optional .caffe2.NetDef init = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->init_, deterministic, target);
  }

  // optional .caffe2.NetDef predict = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->predict_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:caffe2.ModelDef)
  return target;
}

size_t ModelDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:caffe2.ModelDef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .caffe2.ModelMeta meta = 1;
    if (has_meta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->meta_);
    }

    // optional .caffe2.NetDef init = 2;
    if (has_init()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->init_);
    }

    // optional .caffe2.NetDef predict = 3;
    if (has_predict()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->predict_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:caffe2.ModelDef)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:caffe2.ModelDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:caffe2.ModelDef)
    MergeFrom(*source);
  }
}

void ModelDef::MergeFrom(const ModelDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:caffe2.ModelDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_meta()->::caffe2::ModelMeta::MergeFrom(from.meta());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_init()->::caffe2::NetDef::MergeFrom(from.init());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_predict()->::caffe2::NetDef::MergeFrom(from.predict());
    }
  }
}

void ModelDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:caffe2.ModelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelDef::CopyFrom(const ModelDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:caffe2.ModelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelDef::IsInitialized() const {
  return true;
}

void ModelDef::Swap(ModelDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelDef::InternalSwap(ModelDef* other) {
  using std::swap;
  swap(meta_, other->meta_);
  swap(init_, other->init_);
  swap(predict_, other->predict_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelDef::GetMetadata() const {
  protobuf_model_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace caffe2

// @@protoc_insertion_point(global_scope)
